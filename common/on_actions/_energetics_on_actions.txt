### Маленький экскурс по переменным:
# modifier@energy_gain - прирост электроэнергии (см. modifier_definitions)
# energetics_capacity - пропускная способность
# energetics_consumption - потребление от сооружений
# energetics_netto_consumed - чистое потребление
# energetics_plants - количество станций (без учета подстанций)

on_actions = {

	on_startup = {

	}

	on_daily = {
		effect = {

		set_variable = { energetics_consumption = 0 }

			set_variable = { industrial_factory_consumption = num_of_civilian_factories }
			multiply_variable = { industrial_factory_consumption = 0.1 }

			set_variable = { arms_factory_consumption = num_of_military_factories }
			multiply_variable = { arms_factory_consumption = 0.1 }

			set_variable = { naval_factory_consumption = num_of_naval_factories }
			multiply_variable = { naval_factory_consumption = 0.1 }


		set_variable = { energetics_consumption_population = 0 }

			add_to_variable = { energetics_consumption_population = max_manpower_k }
			divide_variable = { energetics_consumption_population = 100 }
			multiply_variable = { energetics_consumption_population = 0.012 }

		set_variable = { energetics_capacity = modifier@energy_capacity }

		###
			set_variable = { nuclear_plants = modifier@nuclear_plants }
			set_variable = { thermoelectric_plants = modifier@thermoelectric_plants }
			set_variable = { solar_power_plants = modifier@solar_power_plants }
			set_variable = { wind_power_plants = modifier@wind_power_plants }

		set_variable = { energetics_plants = 0 }
			add_to_variable = { energetics_plants = modifier@nuclear_plants }
			add_to_variable = { energetics_plants = modifier@thermoelectric_plants }
			add_to_variable = { energetics_plants = modifier@solar_power_plants }
			add_to_variable = { energetics_plants = modifier@wind_power_plants }
			

		set_variable = { energetics_netto_gained = modifier@energy_gain }

			clamp_variable = { 
				var = energetics_netto_gained 
				min = 0 
				max = energetics_capacity
			}

			set_variable = { energetics_needs = 0 }

			subtract_from_variable = { energetics_needs = num_of_civilian_factories }
			subtract_from_variable = { energetics_needs = num_of_military_factories }
			subtract_from_variable = { energetics_needs = num_of_naval_factories }

		set_variable = { energetics_netto_consumed = 0 }

			subtract_from_variable = { energetics_netto_consumed = energetics_needs }
			divide_variable = { energetics_netto_consumed = 10 }
			add_to_variable = { energetics_netto_consumed = energetics_consumption_population }


			if = {
				limit = {
					check_variable = { energetics_netto_gained > energetics_netto_consumed }
					NOT = { has_dynamic_modifier = { modifier = energetics_prosperity } }
				}
				add_dynamic_modifier = { modifier = energetics_prosperity }
			}

			if = {
				limit = {
					check_variable = { energetics_netto_consumed > energetics_netto_gained }
				}
				add_dynamic_modifier = { modifier = energetics_flaw }


			set_variable = { energetics_penalty_stability = energetics_netto_consumed }

				subtract_from_variable = { energetics_penalty_stability = energetics_netto_gained }
				divide_variable = { energetics_penalty_stability = energetics_netto_consumed }
				divide_variable = { energetics_penalty_stability = -2 }

			set_variable = { energetics_penalty_consumer_goods = energetics_netto_consumed }

				subtract_from_variable = { energetics_penalty_consumer_goods = energetics_netto_gained }
				divide_variable = { energetics_penalty_consumer_goods = energetics_netto_consumed }
				divide_variable = { energetics_penalty_consumer_goods = 3 }

			set_variable = { energetics_penalty_production_speed_building = energetics_netto_consumed }

				subtract_from_variable = { energetics_penalty_production_speed_building = energetics_netto_gained }
				divide_variable = { energetics_penalty_production_speed_building = energetics_netto_consumed }
				divide_variable = { energetics_penalty_production_speed_building = -1.5 }

			set_variable = { energetics_penalty_industrial_capacity = energetics_netto_consumed }

				subtract_from_variable = { energetics_penalty_industrial_capacity = energetics_netto_gained }
				divide_variable = { energetics_penalty_industrial_capacity = energetics_netto_consumed }
				divide_variable = { energetics_penalty_industrial_capacity = -2 }

			}

}